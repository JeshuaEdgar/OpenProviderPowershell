name: Pester
on:
  push:
jobs:
  test-pwsh-v7:
    strategy:
      matrix:
        platform: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v3
    - name: Run Pester tests (pwsh v7)
      run: |
        Write-host $PSVersionTable.PSVersion.Major $PSVersionTable.PSRemotingProtocolVersion.Minor
        Set-PSRepository psgallery -InstallationPolicy trusted
        Install-Module -Name Pester -RequiredVersion 5.5.0 -confirm:$false -Force
        $password = ${{ secrets.OP_PASS }}
        $username = ${{ secrets.OP_UNAME }}
        $credential = New-Object System.Management.Automation.PSCredential($username, ($password | ConvertTo-SecureString -AsPlainText -Force)) 
        ./Tests/OpenProvider.tests.ps1 -Credential $credential 
        if ($Error[0].Fullyqualifiederrorid -eq 'PesterAssertionFailed') {exit 1}
      shell: pwsh

  test-posh-v5:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run Pester tests (PowerShell v5)
      run: |
        Write-host $PSVersionTable.PSVersion.Major $PSVersionTable.PSRemotingProtocolVersion.Minor
        Set-PSRepository psgallery -InstallationPolicy trusted
        Install-Module -Name Pester -RequiredVersion 5.5.0 -Confirm:$false -Force
        $password = ${{ secrets.OP_PASS }}
        $username = ${{ secrets.OP_UNAME }}
        $credential = New-Object System.Management.Automation.PSCredential($username, ($password | ConvertTo-SecureString -AsPlainText -Force)) 
        ./Tests/OpenProvider.tests.ps1 -Credential $credential 
        if ($Error[0].Fullyqualifiederrorid -eq 'PesterAssertionFailed') {exit 1}
      shell: powershell